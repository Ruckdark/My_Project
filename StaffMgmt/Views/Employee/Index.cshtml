@* File: Views/Employee/Index.cshtml *@
@* Model cho View này sẽ là danh sách Employee (hoặc EmployeeViewModel) *@
@model IEnumerable<StaffMgmt.Models.Employee>
@* Hoặc @model IEnumerable<StaffMgmt.ViewModels.EmployeeListViewModel> nếu dùng ViewModel *@

@{
    ViewData["Title"] = "Danh sách Nhân viên";
}

<h1>@ViewData["Title"]</h1>

<p>
    @* Nút để chuyển đến trang tạo mới *@
    <a asp-action="Create" class="btn btn-primary">
        <i class="fa-solid fa-plus me-1"></i> Thêm mới Nhân viên
    </a>
</p>

@* Hiển thị thông báo từ TempData (nếu có) *@
@if (TempData["UserMessage"] != null)
{
    string messageType = TempData["MessageType"]?.ToString() ?? "info";
    string alertClass = $"alert-{messageType}";
    <div class="alert @alertClass alert-dismissible fade show" role="alert">
        @TempData["UserMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


<table class="table table-striped table-hover table-bordered">
    <thead>
        <tr>
            <th>
                @* Sử dụng DisplayNameFor nếu dùng ViewModel có [Display] attribute *@
                @* @Html.DisplayNameFor(model => model.First().FullName) *@
                Họ tên
            </th>
            <th>
                Ngày sinh
            </th>
            <th>
                Số điện thoại
            </th>
            <th>
                Địa chỉ (Tỉnh) @* Ví dụ *@
            </th>
            <th>
                Số văn bằng @* Ví dụ - Yêu cầu sau *@
            </th>
            <th>Hành động</th> @* Cột chứa nút Edit, Details, Delete *@
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any()) @* Kiểm tra xem Model có dữ liệu không *@
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FullName)
                    </td>
                    <td>
                        @* Định dạng ngày tháng nếu cần *@
                        @Html.DisplayFor(modelItem => item.DateOfBirth)
                        @* Hoặc: @item.DateOfBirth?.ToString("dd/MM/yyyy") *@
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                    </td>
                    <td>
                        @* Cần Include Province trong query lấy Employee để hiển thị tên tỉnh *@
                        @* @Html.DisplayFor(modelItem => item.Province.Name) *@
                        @(item.ProvinceId.HasValue ? $"ProvinceId: {item.ProvinceId}" : "N/A") @* Hiển thị tạm Id *@
                    </td>
                    <td>
                        @* TODO: Hiển thị số văn bằng *@
                        0 @* Tạm thời *@
                    </td>
                    <td>
                        @* Các nút hành động *@
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary" title="Sửa">
                            <i class="fa-solid fa-pen-to-square"></i>
                        </a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info" title="Chi tiết">
                            <i class="fa-solid fa-circle-info"></i>
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger" title="Xóa">
                            <i class="fa-solid fa-trash-can"></i>
                        </a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="6" class="text-center">Chưa có dữ liệu nhân viên.</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    } @* Thêm nếu cần validation *@
    <script>
        // Có thể thêm JS cho bảng (tìm kiếm, phân trang...) ở đây sau này
    </script>
}

